---import BaseLayout from '@/layouts/BaseLayout.astro';

import { getCollection } from 'astro:content';
const all = await getCollection('services');

// Canonical category order
const CATS = ["Injectables", "Skin", "Laser", "Wellness", "Smile", "Hair Removal"];
const TOP4 = new Set(["neurotoxins", "juvederm-fillers", "chemical-peels", "microneedling"]);

// Group by category following the canonical order
const byCat = Object.fromEntries(
  CATS.map(cat => [cat, all.filter(e => (e.data.category || "").toLowerCase() === cat.toLowerCase())])
);

function urlFor(entry) {
  return `/services/${entry.slug}`;
}
---
<BaseLayout title="Services | Dâ€‘Essence Wellness">

<section class="relative py-16 overflow-hidden" style="background: radial-gradient(1100px 520px at 8% -12%, #F3F5F8 0%, transparent 60%), linear-gradient(180deg, #FFFFFF 0%, #F8FAFB 100%);">
  <div class="container">
    <header class="max-w-3xl">
      <div class="text-xs font-medium tracking-[0.25em] text-neutral-600">SERVICES</div>
      <h1 class="mt-3 text-3xl sm:text-4xl font-semibold tracking-tight">Treatments & categories</h1>
      <p class="mt-4 text-[15px] leading-7 text-neutral-700">
        Explore our full menu of treatments. Filter by category or search by name.
      </p>
    </header>

    <!-- Popular Top 4 -->
    <div class="mt-8">
      <div class="text-sm font-semibold text-neutral-900">Most requested</div>
      <div class="mt-3 grid gap-3 sm:grid-cols-2 lg:grid-cols-4">
        {all.filter(e => TOP4.has(e.slug)).map(e => (
          <a href={urlFor(e)} class="group rounded-xl border border-black/10 bg-white p-5 hover:shadow-md transition">
            <div class="text-[13px] uppercase tracking-widest text-neutral-500">Popular</div>
            <div class="mt-1 text-base font-semibold">{e.data.title}</div>
            <div class="mt-1 text-xs text-neutral-600 line-clamp-2">{e.data.summary}</div>
            <div class="mt-4 text-xs font-medium underline underline-offset-4">View details</div>
          </a>
        ))}
      </div>
    </div>

    <!-- Controls: category pills + search -->
    <div class="mt-10 flex flex-wrap items-center gap-3">
      <div class="flex flex-wrap gap-2" id="svc-cat-pills" aria-label="Filter by category">
        <button data-cat="all" class="px-4 py-2 rounded-full border border-black/10 bg-black/5 text-sm font-medium">All</button>
        {CATS.map(c => (
          <button data-cat={c} class="px-4 py-2 rounded-full border border-black/10 bg-white text-sm font-medium hover:bg-black/5">{c}</button>
        ))}
      </div>
      <div class="flex-1"></div>
      <label class="relative">
        <input id="svc-search" type="search" placeholder="Search services..." class="w-64 px-3 py-2 rounded-full border border-black/10 bg-white text-sm focus:outline-none focus-visible:ring-2 focus-visible:ring-black/20" />
        <span class="sr-only">Search</span>
      </label>
    </div>

    <!-- All services by category -->
    <div id="svc-list" class="mt-8 space-y-10">
      {CATS.map(cat => (
        <section class="svc-category" data-cat={cat}>
          <h2 class="text-xl font-semibold tracking-tight">{cat}</h2>
          <div class="mt-4 grid gap-3 sm:grid-cols-2 lg:grid-cols-3">
            {byCat[cat].map(e => (
              <a href={urlFor(e)} class="svc-card group rounded-xl border border-black/10 bg-white p-5 hover:shadow-md transition"
                 data-title={(e.data.title || '').toLowerCase()} data-cat={cat}>
                <div class="text-[11px] uppercase tracking-widest text-neutral-500">{cat}</div>
                <div class="mt-1 text-base font-semibold">{e.data.title}</div>
                <div class="mt-1 text-xs text-neutral-600 line-clamp-2">{e.data.summary}</div>
                <div class="mt-4 text-xs font-medium underline underline-offset-4 group-hover:opacity-80">View details</div>
              </a>
            ))}
          </div>
        </section>
      ))}
    </div>
  </div>

  <script>
    const pills = Array.from(document.querySelectorAll('#svc-cat-pills [data-cat]'));
    const cards = Array.from(document.querySelectorAll('.svc-card'));
    const sections = Array.from(document.querySelectorAll('.svc-category'));
    const search = document.getElementById('svc-search');

    let activeCat = 'all';
    let q = '';

    function apply() {
      const test = (title, cat) => {
        const okCat = (activeCat === 'all') || (cat.toLowerCase() === activeCat.toLowerCase());
        const okText = !q || title.includes(q);
        return okCat && okText;
      };

      // Toggle cards
      cards.forEach(card => {
        const title = (card.getAttribute('data-title') || '').toLowerCase();
        const cat = (card.getAttribute('data-cat') || '');
        const show = test(title, cat);
        card.classList.toggle('hidden', !show);
      });

      // Hide entire sections if all children hidden
      sections.forEach(sec => {
        const cat = sec.getAttribute('data-cat') || '';
        const children = Array.from(sec.querySelectorAll('.svc-card'));
        const any = children.some(c => !c.classList.contains('hidden'));
        sec.classList.toggle('hidden', !any);
      });

      // Update pills styling
      pills.forEach(p => {
        const sel = p.getAttribute('data-cat') === activeCat;
        p.classList.toggle('bg-black/5', sel);
        p.classList.toggle('bg-white', !sel);
      });
    }

    pills.forEach(p => {
      p.addEventListener('click', () => {
        activeCat = p.getAttribute('data-cat');
        apply();
      });
    });

    search.addEventListener('input', () => {
      q = search.value.trim().toLowerCase();
      apply();
    });
  </script>
</section>

</BaseLayout>
