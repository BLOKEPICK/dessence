---
import BaseLayout from '@/layouts/BaseLayout.astro';
import ResultsGrid from '@/components/ResultsGrid.astro';
import { getCollection } from 'astro:content';
import Section from '@/components/Section.astro';
import IconService from '@/components/icons/IconService.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const entries = await getCollection('services');
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry, entries }
  }));
}

const { entry, entries } = Astro.props;
const related = entries.filter((e) => e.slug !== entry.slug).slice(0, 4);

const icons = {
  'neurotoxins':'syringe',
  'juvederm-fillers':'lips',
  'platelet-rich-plasma-prp':'test-tube',
  'microneedling':'dermapen',
  'aerolase':'laser-beam',
  'chemical-peels':'peel',
  'filler-dissolving':'dissolve',
  'skinvive':'glow-drop',
  'smooth-pdo-threads':'pdo',
  'teeth-whitening':'tooth',
  'skincare':'bottle',
  'facials':'mask',
  'waxing':'wax-pot',
  'spider-vein-treatment':'leg-vein',
  'vitamin-injections':'vial-plus',
  'nefertiti-neck':'jawline',
  'specialty-treatments':'med-star'
};


const seo = {
  title: entry.data.metaTitle ?? `${entry.data.title} | D‑Essence Wellness`,
  description: entry.data.metaDescription ?? entry.data.summary,
  canonical: `/services/${entry.slug}`,
  type: 'article',
  jsonLd: []
};
---

---
const slug = Astro.params.slug;
const allResults = await getCollection('results');
const serviceResults = allResults.filter(r => r.data.serviceSlug === slug).map(r => ({
  title:r.data.title, service:r.data.serviceSlug, before:r.data.imageBefore, after:r.data.imageAfter
}));
---

<BaseLayout seo={seo}>
  <section class="section">
    <div class="container max-w-3xl">
      <div class="flex items-center gap-3">
        <div class="w-11 h-11 rounded-2xl bg-black text-white flex items-center justify-center">
          <IconService name={icons[entry.slug] ?? 'star'} />
        </div>
        <h1 class="text-3xl sm:text-4xl font-semibold tracking-tight">{entry.data.title}</h1>
      </div>
      <p class="text-muted mt-2">{entry.data.summary}</p>
      <div class="mt-6 grid grid-cols-1 sm:grid-cols-3 gap-4">
        {entry.data.idealFor && <div class="card p-4"><b>Ideal for</b><ul class="mt-2 text-sm">{entry.data.idealFor.map(i => <li>• {i}</li>)}</ul></div>}
        {entry.data.downtime && <div class="card p-4"><b>Downtime</b><p class="text-sm mt-2">{entry.data.downtime}</p></div>}
        {entry.data.session && <div class="card p-4"><b>Typical session</b><p class="text-sm mt-2">{entry.data.session}</p></div>}
      </div>
      <div class="mt-6"><a href="/appointment" class="btn btn-primary">Book Consultation</a></div>
      <hr class="my-10 border-line" />
      <h3 class="text-xl font-semibold">Related services</h3>
      <ul class="mt-3 grid grid-cols-1 sm:grid-cols-2 gap-3">
        {related.map(r => <li><a href={`/services/${r.slug}`} class="underline">{r.data.title}</a></li>)}
      </ul>
    </div>
  </section>

<ResultsGrid items={serviceResults} title="Results" subtitle="Before & After — filtered by this service." id="service-results" />
</BaseLayout>
