---
import BaseLayout from '@/layouts/BaseLayout.astro';
import Section from '@/components/Section.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const entries = await getCollection('services');
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry, entries }
  }));
}

// Props from getStaticPaths
const { entry, entries } = Astro.props;

const related = entries.filter((e) => e.slug !== entry.slug).slice(0, 4);

const seo = {
  title: entry.data.metaTitle ?? `${entry.data.title} | D-Essence Wellness`,
  description: entry.data.metaDescription ?? entry.data.summary,
  canonical: `/services/${entry.slug}`,
  type: 'article',
  jsonLd: [
    {
      "@context":"https://schema.org",
      "@type":"Service",
      "name": entry.data.title,
      "description": entry.data.summary,
      "areaServed": "New Windsor, NY",
      "provider": { "@type": "LocalBusiness", "name": "D-Essence Wellness", "telephone": "+1-716-303-8963" }
    },
    {
      "@context":"https://schema.org",
      "@type":"BreadcrumbList",
      "itemListElement":[
        {"@type":"ListItem","position":1,"name":"Services","item":"/services"},
        {"@type":"ListItem","position":2,"name":entry.data.title,"item":`/services/${entry.slug}`}
      ]
    },
    entry.data.faqs && {
      "@context":"https://schema.org",
      "@type":"FAQPage",
      "mainEntity": entry.data.faqs.map(f => ({
        "@type":"Question","name":f.q,"acceptedAnswer":{"@type":"Answer","text":f.a}
      }))
    }
  ].filter(Boolean)
};
---
<BaseLayout seo={seo}>
  <section class="section">
    <div class="container max-w-3xl">
      <h1 class="text-3xl sm:text-4xl font-semibold tracking-tight">{entry.data.title}</h1>
      <p class="text-muted">{entry.data.summary}</p>
      <div class="mt-6 grid grid-cols-1 sm:grid-cols-3 gap-4">
        {entry.data.idealFor && <div class="card"><b>Ideal for</b><ul class="mt-2 text-sm">{entry.data.idealFor.map(i => <li>â€¢ {i}</li>)}</ul></div>}
        {entry.data.downtime && <div class="card"><b>Downtime</b><p class="text-sm mt-2">{entry.data.downtime}</p></div>}
        {entry.data.session && <div class="card"><b>Typical session</b><p class="text-sm mt-2">{entry.data.session}</p></div>}
      </div>
      <div class="mt-6"><a href="/appointment" class="btn btn-primary">Book Consultation</a></div>
      <hr class="my-10 border-line" />
      <h3 class="text-xl font-semibold">Related services</h3>
      <ul class="mt-3 grid grid-cols-1 sm:grid-cols-2 gap-3">
        {related.map(r => <li><a href={`/services/${r.slug}`} class="underline">{r.data.title}</a></li>)}
      </ul>
    </div>
  </section>
</BaseLayout>
