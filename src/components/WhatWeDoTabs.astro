---
const items = [
  { id: "neurotoxins", label: "Neurotoxins", title: "Neurotoxins (Botox/Dysport)", kicker: "Soften dynamic lines with minimal downtime.", img: "/tab-neurotoxins-720.webp", desc: "Natural-looking refinement using precise, conservative dosing for forehead lines, frown lines, and crow’s feet.", href: "/services/neurotoxins" },
  { id: "juvederm", label: "Juvederm", title: "Juvederm Fillers", kicker: "Balance, contour, and hydration.", img: "/tab-juvederm-720.webp", desc: "Hyaluronic acid fillers to restore volume and contour with a harmony‑first approach that looks like you.", href: "/services/juvederm-fillers" },
  { id: "peels", label: "Chemical Peels", title: "Chemical Peels", kicker: "Clarity and smoothness.", img: "/tab-peels-720.webp", desc: "Medical‑grade peels to refine texture, reduce dullness, and support even tone—with tailored downtime.", href: "/services/chemical-peels" },
  { id: "microneedling", label: "Microneedling", title: "Microneedling", kicker: "Collagen support for texture and firmness.", img: "/tab-microneedling-720.webp", desc: "Collagen‑stimulating treatment for smoother texture and better tone; pairs well with targeted skincare.", href: "/services/microneedling" },
];
---
<section class="relative py-20 overflow-hidden" style="background: radial-gradient(1100px 500px at 8% -12%, #F3F5F8 0%, transparent 60%), linear-gradient(180deg, #FFFFFF 0%, #F8FAFB 100%);">
  <div class="container">
    <div class="max-w-3xl">
      <div class="text-xs font-medium tracking-[0.25em] text-neutral-600">WHAT WE DO</div>
      <h2 class="mt-3 text-3xl sm:text-4xl font-semibold tracking-tight">Services tailored to you — with safety, comfort, and natural results.</h2>
      <p class="mt-4 text-[15px] leading-7 text-neutral-700">
        Evidence‑based treatments designed around your goals and timeline. Explore our core categories below.
      </p>
    </div>

    <div class="mt-10">
      <div class="flex flex-wrap gap-2" role="tablist" aria-label="What we do">
        {items.map((it, idx) => (
          <button
            type="button"
            class="tab px-4 py-2 rounded-full border border-black/10 bg-white text-sm font-medium text-neutral-700 hover:bg-black/5 focus:outline-none focus-visible:ring-2 focus-visible:ring-black/20"
            role="tab"
            aria-selected={idx === 0 ? "true" : "false"}
            aria-controls={`panel-${it.id}`}
            id={`tab-${it.id}`}
            data-id={it.id}
          >
            {it.label}
          </button>
        ))}
      </div>

      <div class="mt-6 rounded-2xl border border-black/10 bg-white p-6 md:p-8 shadow-sm">
        {items.map((it, idx) => (
          <div
            id={`panel-${it.id}`}
            role="tabpanel"
            aria-labelledby={`tab-${it.id}`}
            class={`panel grid gap-6 md:grid-cols-5 items-start ${idx === 0 ? "" : "hidden"}`}
          >
            <div class="md:col-span-2">
              <div class="overflow-hidden rounded-xl ring-1 ring-black/10 bg-neutral-100">
                <picture>
                  <source type="image/webp" srcset={`${it.img} 720w`} sizes="(min-width: 768px) 36rem, 100vw" />
                  <img src={it.img} alt={it.title} class="w-full h-auto object-cover" loading="lazy" decoding="async" />
                </picture>
              </div>
            </div>
            <div class="md:col-span-3">
              <div class="text-[13px] uppercase tracking-widest text-neutral-500">Category</div>
              <h3 class="mt-2 text-2xl md:text-3xl font-semibold tracking-tight">{it.title}</h3>
              <p class="mt-2 text-[15px] text-neutral-700">{it.kicker}</p>
              <p class="mt-5 text-[15px] leading-7 text-neutral-800">{it.desc}</p>
              <div class="mt-6 flex gap-6">
                <a href={it.href} class="text-sm font-medium underline underline-offset-4">View details</a>
                <a href="/appointment" class="text-sm font-medium"><span class="pb-1 border-b border-black">Book a consultation</span></a>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>

  <script>
    const tabs = Array.from(document.querySelectorAll('.tab[data-id]'));
    const panels = Array.from(document.querySelectorAll('.panel[id^="panel-"]'));
    function activate(id) {
      tabs.forEach(t => {
        const sel = t.getAttribute('data-id') === id;
        t.setAttribute('aria-selected', sel ? 'true' : 'false');
        t.classList.toggle('bg-black/5', sel);
      });
      panels.forEach(p => {
        p.classList.toggle('hidden', p.id !== 'panel-' + id);
      });
    }
    tabs.forEach(t => {
      t.addEventListener('click', () => activate(t.getAttribute('data-id')));
      t.addEventListener('mouseenter', () => {
        if (window.matchMedia('(hover: hover)').matches) activate(t.getAttribute('data-id'));
      });
    });
  </script>
</section>
